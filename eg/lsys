#!/usr/bin/env perl
use strict;
use warnings;

use Data::Turtle;

my $repetitions = shift || 1;
my $string      = shift || 'A';

my %rule = (
    A => 'S[-A][+A]',
);

my $changes = {
    distance => 40, 
    theta    => 0.2, 
};

my $turtle = Data::Turtle->new;

my @statestack;

my %translate = (
    'S' => sub { $turtle->forward( $changes->{distance} ) },
    '-' => sub { $turtle->turn( - $changes->{theta} ) },
    '+' => sub { $turtle->turn( $changes->{theta} ) },
    'M' => sub { $turtle->mirror() },
    '[' => sub { push @statestack, [ $turtle->state() ] },
    ']' => sub { $turtle->set_state( @{ pop @statestack } ) },
);

for ( 1 .. $repetitions ) {
    $string =~ s/./defined($rule{$&}) ? $rule{$&} : $&/eg;
}
warn __LINE__,". String: ","$string\n";

#for my $command ( split( //, $string ) ) {
#    $translate{$command}->() if $translate{$command};
#}
